--------------------------------------------------------
-- Archivo creado  - lunes-agosto-21-2023   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ADMINISTRADORES
--------------------------------------------------------

  CREATE TABLE "C##ADMIN_DB"."ADMINISTRADORES" 
   (	"ID" NUMBER(*,0), 
	"NOMBRE" VARCHAR2(50 BYTE), 
	"EMAIL" VARCHAR2(50 BYTE), 
	"CONTRASEÑA" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##ADMIN_DB"."ADMINISTRADORES"."ID" IS 'Variable que contiene el ID del administrador.';
   COMMENT ON COLUMN "C##ADMIN_DB"."ADMINISTRADORES"."NOMBRE" IS 'Variable para obtener un nombre respectivo al admin.';
   COMMENT ON COLUMN "C##ADMIN_DB"."ADMINISTRADORES"."EMAIL" IS 'Se usa para obtener el Email del admin para verificar despues su ingreso.';
   COMMENT ON COLUMN "C##ADMIN_DB"."ADMINISTRADORES"."CONTRASEÑA" IS 'Se captura en esta variable la contraseña con las cual se identifica su inicio al sistema.';
--------------------------------------------------------
--  DDL for Table CLIENTES
--------------------------------------------------------

  CREATE TABLE "C##ADMIN_DB"."CLIENTES" 
   (	"ID_CLIENTE" NUMBER(*,0), 
	"NOMBRE" VARCHAR2(50 BYTE), 
	"DESCRIPCION" VARCHAR2(100 BYTE), 
	"TELEFONO" VARCHAR2(20 BYTE), 
	"CORREO" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##ADMIN_DB"."CLIENTES"."ID_CLIENTE" IS 'Clave primera para el Cliente.';
   COMMENT ON COLUMN "C##ADMIN_DB"."CLIENTES"."NOMBRE" IS 'Variable para guardar informacion de nombre.';
   COMMENT ON COLUMN "C##ADMIN_DB"."CLIENTES"."DESCRIPCION" IS 'Se guardara una breve descripcion del usuario.';
   COMMENT ON COLUMN "C##ADMIN_DB"."CLIENTES"."TELEFONO" IS 'Campo para almacenar numero telefonico del cliente.';
   COMMENT ON COLUMN "C##ADMIN_DB"."CLIENTES"."CORREO" IS 'Variable para guardar su respectivo correo.';
--------------------------------------------------------
--  DDL for Table DEPARTAMENTOS
--------------------------------------------------------

  CREATE TABLE "C##ADMIN_DB"."DEPARTAMENTOS" 
   (	"DEPARTAMENTOS_ID" NUMBER(*,0), 
	"NOMBRE" VARCHAR2(100 BYTE), 
	"UBICACION" VARCHAR2(100 BYTE), 
	"ID_PROVEEDOR" NUMBER(*,0), 
	"EMPLEADO_ID" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##ADMIN_DB"."DEPARTAMENTOS"."DEPARTAMENTOS_ID" IS 'Clave primaria de tabla Departamentos.';
   COMMENT ON COLUMN "C##ADMIN_DB"."DEPARTAMENTOS"."NOMBRE" IS 'Se almacena su respectivo nombre.';
   COMMENT ON COLUMN "C##ADMIN_DB"."DEPARTAMENTOS"."UBICACION" IS 'Se pondra una locacion de manera manual.';
   COMMENT ON COLUMN "C##ADMIN_DB"."DEPARTAMENTOS"."ID_PROVEEDOR" IS 'Clave Foranea para tener relacion con los proveedores.';
   COMMENT ON COLUMN "C##ADMIN_DB"."DEPARTAMENTOS"."EMPLEADO_ID" IS 'Clave foranea para tener relacion con los empleados.';
--------------------------------------------------------
--  DDL for Table DETALLES_PEDIDO
--------------------------------------------------------

  CREATE TABLE "C##ADMIN_DB"."DETALLES_PEDIDO" 
   (	"ID_DETALLE" NUMBER(*,0), 
	"CANTIDAD" NUMBER(*,0), 
	"PRECIO_UNITARIO" NUMBER(10,2), 
	"ID_PEDIDO" NUMBER(*,0), 
	"DIRECCION_ID" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##ADMIN_DB"."DETALLES_PEDIDO"."ID_DETALLE" IS 'Clave primeria para el detalle del pedido.';
   COMMENT ON COLUMN "C##ADMIN_DB"."DETALLES_PEDIDO"."CANTIDAD" IS 'se almacena una cantidad unitaria.';
   COMMENT ON COLUMN "C##ADMIN_DB"."DETALLES_PEDIDO"."PRECIO_UNITARIO" IS 'Se hara una funcion de precio.';
   COMMENT ON COLUMN "C##ADMIN_DB"."DETALLES_PEDIDO"."ID_PEDIDO" IS 'clave foranea con relacion a la tabla pedido.';
   COMMENT ON COLUMN "C##ADMIN_DB"."DETALLES_PEDIDO"."DIRECCION_ID" IS 'clave foranea con relacion a direcciones.';
--------------------------------------------------------
--  DDL for Table DIRECCIONES
--------------------------------------------------------

  CREATE TABLE "C##ADMIN_DB"."DIRECCIONES" 
   (	"DIRECCION_ID" NUMBER(*,0), 
	"ID_CLIENTE" NUMBER(*,0), 
	"PROVINCIA" VARCHAR2(50 BYTE), 
	"CANTON" VARCHAR2(50 BYTE), 
	"DISTRITO" VARCHAR2(50 BYTE), 
	"DETALLE_DIRECCION" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##ADMIN_DB"."DIRECCIONES"."DIRECCION_ID" IS 'Clave primera de direcciones.';
   COMMENT ON COLUMN "C##ADMIN_DB"."DIRECCIONES"."ID_CLIENTE" IS 'clave foranea para referenciar al cliente.';
--------------------------------------------------------
--  DDL for Table EMPLEADO
--------------------------------------------------------

  CREATE TABLE "C##ADMIN_DB"."EMPLEADO" 
   (	"EMPLEADO_ID" NUMBER(*,0), 
	"NOMBRE" VARCHAR2(50 BYTE), 
	"APELLIDO" VARCHAR2(50 BYTE), 
	"FECHA_NACIMIENTO" DATE, 
	"PUESTO" VARCHAR2(50 BYTE), 
	"ID_PEDIDOS" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##ADMIN_DB"."EMPLEADO"."EMPLEADO_ID" IS 'Clave primaria de empleado.';
   COMMENT ON COLUMN "C##ADMIN_DB"."EMPLEADO"."NOMBRE" IS 'Variable para almacenar nombre del empleado.
';
   COMMENT ON COLUMN "C##ADMIN_DB"."EMPLEADO"."APELLIDO" IS 'Variable para almacenar apellido del empleado.
';
   COMMENT ON COLUMN "C##ADMIN_DB"."EMPLEADO"."FECHA_NACIMIENTO" IS 'Un tipo DATE para la fecha de nacimiento.';
   COMMENT ON COLUMN "C##ADMIN_DB"."EMPLEADO"."PUESTO" IS 'Variable con referencia a su puesto.';
   COMMENT ON COLUMN "C##ADMIN_DB"."EMPLEADO"."ID_PEDIDOS" IS 'Clave foranea para tener relacion con los pedidos que ejecute.';
--------------------------------------------------------
--  DDL for Table FACTURAS
--------------------------------------------------------

  CREATE TABLE "C##ADMIN_DB"."FACTURAS" 
   (	"FACTURA_ID" NUMBER(*,0), 
	"FECHA" DATE, 
	"TOTAL" NUMBER(10,2), 
	"EMPLEADO_ID" NUMBER(*,0), 
	"DESCRIPCION" VARCHAR2(255 BYTE), 
	"ID_CLIENTE" NUMBER(*,0), 
	"PAGO_ID" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##ADMIN_DB"."FACTURAS"."FACTURA_ID" IS 'Clave primaria de la factura.';
   COMMENT ON COLUMN "C##ADMIN_DB"."FACTURAS"."FECHA" IS 'Texto de referencia de la fecha de factura.';
   COMMENT ON COLUMN "C##ADMIN_DB"."FACTURAS"."TOTAL" IS 'Suma de total de compra de la factura.';
   COMMENT ON COLUMN "C##ADMIN_DB"."FACTURAS"."EMPLEADO_ID" IS 'Clave Foranea para referenciar empleado que ejecute la factura.';
--------------------------------------------------------
--  DDL for Table PAGOS
--------------------------------------------------------

  CREATE TABLE "C##ADMIN_DB"."PAGOS" 
   (	"PAGO_ID" NUMBER(*,0), 
	"DIRECCION_ID" NUMBER(*,0), 
	"MONTO" NUMBER(10,2), 
	"ID_PEDIDO" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##ADMIN_DB"."PAGOS"."PAGO_ID" IS 'Clave primaria de la tabla pagos.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PAGOS"."DIRECCION_ID" IS 'Clave foranea de direcciones para referenciar el pago.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PAGOS"."MONTO" IS 'campo de texto para almacenar monto del pago.';
--------------------------------------------------------
--  DDL for Table PEDIDOS
--------------------------------------------------------

  CREATE TABLE "C##ADMIN_DB"."PEDIDOS" 
   (	"ID_PEDIDO" NUMBER(*,0), 
	"ID_CLIENTE" NUMBER(*,0), 
	"ID_PRODUCTO" NUMBER(*,0), 
	"FECHA" DATE, 
	"TOTAL_FACTURA" NUMBER(10,2), 
	"ESTADO_PRODUCTO" VARCHAR2(50 BYTE), 
	"CANTIDAD" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##ADMIN_DB"."PEDIDOS"."ID_PEDIDO" IS 'Clave primaria de pedidos.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PEDIDOS"."ID_CLIENTE" IS 'Clave foranea de cliente para tener una relacion con el.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PEDIDOS"."ID_PRODUCTO" IS 'Clave foranea de cliente para tener una relacion con los productos pedidos.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PEDIDOS"."FECHA" IS 'campo de texto para almacenar la fecha del pedido.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PEDIDOS"."TOTAL_FACTURA" IS 'Un total de factura para guardar y mostrar en factura.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PEDIDOS"."ESTADO_PRODUCTO" IS 'Una verificacion de si hay existencias o no.';
--------------------------------------------------------
--  DDL for Table PRODUCTOS
--------------------------------------------------------

  CREATE TABLE "C##ADMIN_DB"."PRODUCTOS" 
   (	"ID_PRODUCTO" NUMBER(*,0), 
	"ID_PROVEEDOR" NUMBER(*,0), 
	"NOMBRE" VARCHAR2(50 BYTE), 
	"DESCRIPCION" VARCHAR2(100 BYTE), 
	"PRECIO" NUMBER(10,2), 
	"STOCK" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##ADMIN_DB"."PRODUCTOS"."ID_PRODUCTO" IS 'Clave primaria de producto.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PRODUCTOS"."ID_PROVEEDOR" IS 'Clave foranea de proveedor para tener relacion con esa tabla.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PRODUCTOS"."NOMBRE" IS 'Variable para almacenar el nombre del producto.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PRODUCTOS"."DESCRIPCION" IS 'Variable para almacenar la descripcion del producto.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PRODUCTOS"."PRECIO" IS 'Variable para almacenar el precio del producto.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PRODUCTOS"."STOCK" IS 'Variable para almacenar el stock con el que cuentan por producto.';
--------------------------------------------------------
--  DDL for Table PROVEEDORES
--------------------------------------------------------

  CREATE TABLE "C##ADMIN_DB"."PROVEEDORES" 
   (	"ID_PROVEEDOR" NUMBER(*,0), 
	"NOMBRE" VARCHAR2(50 BYTE), 
	"DESCRIPCION" VARCHAR2(100 BYTE), 
	"TELEFONO" VARCHAR2(20 BYTE), 
	"CORREO" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##ADMIN_DB"."PROVEEDORES"."ID_PROVEEDOR" IS 'Clave primaria del proveedor.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PROVEEDORES"."NOMBRE" IS 'Variable para almacenar el nombre del proveedor.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PROVEEDORES"."DESCRIPCION" IS 'Variable para almacenar la descripcion del proveedor.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PROVEEDORES"."TELEFONO" IS 'Variable para almacenar el telefono de contactodel proveedor.';
   COMMENT ON COLUMN "C##ADMIN_DB"."PROVEEDORES"."CORREO" IS 'Variable para almacenar el correo de contacto del proveedor.';
--------------------------------------------------------
--  DDL for View VISTA_CLIENTES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##ADMIN_DB"."VISTA_CLIENTES" ("ID_CLIENTE", "NOMBRE", "DESCRIPCION", "TELEFONO", "CORREO") AS 
  SELECT id_cliente, nombre, descripcion, telefono, correo
FROM clientes;

   COMMENT ON TABLE "C##ADMIN_DB"."VISTA_CLIENTES"  IS 'Vista que se utilizara de manera de complemento para consultas mas rapidas.'
;
--------------------------------------------------------
--  DDL for View VISTA_CLIENTES_PEDIDOS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##ADMIN_DB"."VISTA_CLIENTES_PEDIDOS" ("ID_CLIENTE", "NOMBRE", "ID_PRODUCTO", "ID_PEDIDO", "FECHA", "TOTAL_FACTURA", "ESTADO_PRODUCTO") AS 
  SELECT c.id_cliente, c.nombre, p.id_producto, p.id_pedido, p.fecha, p.total_factura, p.estado_producto
FROM clientes c
JOIN pedidos p ON c.id_cliente = p.id_cliente;

   COMMENT ON TABLE "C##ADMIN_DB"."VISTA_CLIENTES_PEDIDOS"  IS 'Vista que se utilizara de manera de complemento para consultas mas rapidas.'
;
--------------------------------------------------------
--  DDL for View VISTA_DIRECCIONES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##ADMIN_DB"."VISTA_DIRECCIONES" ("DIRECCION_ID", "ID_CLIENTE", "PROVINCIA", "CANTON", "DISTRITO", "DETALLE_DIRECCION") AS 
  SELECT direccion_id, id_cliente, provincia, canton, distrito, detalle_direccion
FROM Direcciones
;
--------------------------------------------------------
--  DDL for View VISTA_PRODUCTOS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##ADMIN_DB"."VISTA_PRODUCTOS" ("ID_PRODUCTO", "ID_PROVEEDOR", "NOMBRE", "DESCRIPCION", "PRECIO", "STOCK") AS 
  SELECT id_producto, id_proveedor, nombre, descripcion, precio, stock
FROM productos
;
--------------------------------------------------------
--  DDL for View VISTA_PROVEEDORES_PRODUCTOS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##ADMIN_DB"."VISTA_PROVEEDORES_PRODUCTOS" ("ID_PRODUCTO", "NOMBRE_PRODUCTO", "DESCRIPCION", "STOCK", "ID_PROVEEDOR", "NOMBRE_PROVEEDOR") AS 
  SELECT p.id_producto, p.nombre AS nombre_producto, p.descripcion, p.stock,
       pr.id_proveedor, pr.nombre AS nombre_proveedor
FROM productos p
JOIN proveedores pr ON p.id_proveedor = pr.id_proveedor
;
REM INSERTING into C##ADMIN_DB.ADMINISTRADORES
SET DEFINE OFF;
Insert into C##ADMIN_DB.ADMINISTRADORES (ID,NOMBRE,EMAIL,"CONTRASEÑA") values (2,'TEST','TEST','12345');
Insert into C##ADMIN_DB.ADMINISTRADORES (ID,NOMBRE,EMAIL,"CONTRASEÑA") values (6,'test','test','tt');
Insert into C##ADMIN_DB.ADMINISTRADORES (ID,NOMBRE,EMAIL,"CONTRASEÑA") values (11,'R','R','RR');
Insert into C##ADMIN_DB.ADMINISTRADORES (ID,NOMBRE,EMAIL,"CONTRASEÑA") values (4,'T','T','T');
Insert into C##ADMIN_DB.ADMINISTRADORES (ID,NOMBRE,EMAIL,"CONTRASEÑA") values (7,'Fabian','fabian@gmail.com','12345');
Insert into C##ADMIN_DB.ADMINISTRADORES (ID,NOMBRE,EMAIL,"CONTRASEÑA") values (14,'t','t','t');
Insert into C##ADMIN_DB.ADMINISTRADORES (ID,NOMBRE,EMAIL,"CONTRASEÑA") values (17,'Alonso','alonso@gmail.com','12345');
Insert into C##ADMIN_DB.ADMINISTRADORES (ID,NOMBRE,EMAIL,"CONTRASEÑA") values (5,'test','test','test');
Insert into C##ADMIN_DB.ADMINISTRADORES (ID,NOMBRE,EMAIL,"CONTRASEÑA") values (8,'a','a','a');
Insert into C##ADMIN_DB.ADMINISTRADORES (ID,NOMBRE,EMAIL,"CONTRASEÑA") values (10,'f','f','f');
Insert into C##ADMIN_DB.ADMINISTRADORES (ID,NOMBRE,EMAIL,"CONTRASEÑA") values (15,'Fabian','fabian@gmail.com','12345');
REM INSERTING into C##ADMIN_DB.CLIENTES
SET DEFINE OFF;
Insert into C##ADMIN_DB.CLIENTES (ID_CLIENTE,NOMBRE,DESCRIPCION,TELEFONO,CORREO) values (70,'TEST','TEST','888888888','F@F.COM');
Insert into C##ADMIN_DB.CLIENTES (ID_CLIENTE,NOMBRE,DESCRIPCION,TELEFONO,CORREO) values (2,'TESTfabian','TEST','3535999','3535');
Insert into C##ADMIN_DB.CLIENTES (ID_CLIENTE,NOMBRE,DESCRIPCION,TELEFONO,CORREO) values (4,'Johan Perez','Cliente del departamento de Electronica','55556666','johan1@gmail.com');
Insert into C##ADMIN_DB.CLIENTES (ID_CLIENTE,NOMBRE,DESCRIPCION,TELEFONO,CORREO) values (3,'Fabian Ruiz','Cliente del departamento de Zapatos','88887777','fabianr@gmail.com');
REM INSERTING into C##ADMIN_DB.DEPARTAMENTOS
SET DEFINE OFF;
Insert into C##ADMIN_DB.DEPARTAMENTOS (DEPARTAMENTOS_ID,NOMBRE,UBICACION,ID_PROVEEDOR,EMPLEADO_ID) values (2,'Electronica','San jose, Costa Rica',202,2);
Insert into C##ADMIN_DB.DEPARTAMENTOS (DEPARTAMENTOS_ID,NOMBRE,UBICACION,ID_PROVEEDOR,EMPLEADO_ID) values (1,'Prueba Depa 1','San jose, Costa Rica',202,2);
Insert into C##ADMIN_DB.DEPARTAMENTOS (DEPARTAMENTOS_ID,NOMBRE,UBICACION,ID_PROVEEDOR,EMPLEADO_ID) values (3,'Prueba Depa 3','San jose, Costa Rica',203,2);
REM INSERTING into C##ADMIN_DB.DETALLES_PEDIDO
SET DEFINE OFF;
Insert into C##ADMIN_DB.DETALLES_PEDIDO (ID_DETALLE,CANTIDAD,PRECIO_UNITARIO,ID_PEDIDO,DIRECCION_ID) values (3,35,25.99,6,2);
Insert into C##ADMIN_DB.DETALLES_PEDIDO (ID_DETALLE,CANTIDAD,PRECIO_UNITARIO,ID_PEDIDO,DIRECCION_ID) values (4,35,25.99,6,2);
Insert into C##ADMIN_DB.DETALLES_PEDIDO (ID_DETALLE,CANTIDAD,PRECIO_UNITARIO,ID_PEDIDO,DIRECCION_ID) values (2,35,25.99,5,2);
Insert into C##ADMIN_DB.DETALLES_PEDIDO (ID_DETALLE,CANTIDAD,PRECIO_UNITARIO,ID_PEDIDO,DIRECCION_ID) values (1,10,19.95,2,2);
REM INSERTING into C##ADMIN_DB.DIRECCIONES
SET DEFINE OFF;
Insert into C##ADMIN_DB.DIRECCIONES (DIRECCION_ID,ID_CLIENTE,PROVINCIA,CANTON,DISTRITO,DETALLE_DIRECCION) values (5,3,'San Jose','San jose','Mercedez','Calle 56, Casa 070');
Insert into C##ADMIN_DB.DIRECCIONES (DIRECCION_ID,ID_CLIENTE,PROVINCIA,CANTON,DISTRITO,DETALLE_DIRECCION) values (2,2,null,null,null,null);
Insert into C##ADMIN_DB.DIRECCIONES (DIRECCION_ID,ID_CLIENTE,PROVINCIA,CANTON,DISTRITO,DETALLE_DIRECCION) values (4,4,'Cartgo','Cartago','Oriental','Calle 3, Casa 456');
Insert into C##ADMIN_DB.DIRECCIONES (DIRECCION_ID,ID_CLIENTE,PROVINCIA,CANTON,DISTRITO,DETALLE_DIRECCION) values (3,2,'San Jose','Escazu','San Rafael','Calle 1, Casa 123');
REM INSERTING into C##ADMIN_DB.EMPLEADO
SET DEFINE OFF;
Insert into C##ADMIN_DB.EMPLEADO (EMPLEADO_ID,NOMBRE,APELLIDO,FECHA_NACIMIENTO,PUESTO,ID_PEDIDOS) values (1,'Fabian','Ruiz',to_date('25/12/96','DD/MM/RR'),'Gerente',null);
Insert into C##ADMIN_DB.EMPLEADO (EMPLEADO_ID,NOMBRE,APELLIDO,FECHA_NACIMIENTO,PUESTO,ID_PEDIDOS) values (5,'prueba','prueba',to_date('09/08/96','DD/MM/RR'),'prueba',1);
Insert into C##ADMIN_DB.EMPLEADO (EMPLEADO_ID,NOMBRE,APELLIDO,FECHA_NACIMIENTO,PUESTO,ID_PEDIDOS) values (7,'Pablo','Garita',to_date('07/12/97','DD/MM/RR'),'Gerente',6);
Insert into C##ADMIN_DB.EMPLEADO (EMPLEADO_ID,NOMBRE,APELLIDO,FECHA_NACIMIENTO,PUESTO,ID_PEDIDOS) values (8,'Willian','Vargas',to_date('01/01/96','DD/MM/RR'),'CEO ',3);
Insert into C##ADMIN_DB.EMPLEADO (EMPLEADO_ID,NOMBRE,APELLIDO,FECHA_NACIMIENTO,PUESTO,ID_PEDIDOS) values (2,'Alonso','Ruiz',to_date('04/08/23','DD/MM/RR'),'Gerente',1);
Insert into C##ADMIN_DB.EMPLEADO (EMPLEADO_ID,NOMBRE,APELLIDO,FECHA_NACIMIENTO,PUESTO,ID_PEDIDOS) values (3,'testo','testo',to_date('04/08/96','DD/MM/RR'),'test',1);
Insert into C##ADMIN_DB.EMPLEADO (EMPLEADO_ID,NOMBRE,APELLIDO,FECHA_NACIMIENTO,PUESTO,ID_PEDIDOS) values (6,'Jonathan','Garita',to_date('16/08/88','DD/MM/RR'),'Ventas externas',1);
REM INSERTING into C##ADMIN_DB.FACTURAS
SET DEFINE OFF;
Insert into C##ADMIN_DB.FACTURAS (FACTURA_ID,FECHA,TOTAL,EMPLEADO_ID,DESCRIPCION,ID_CLIENTE,PAGO_ID) values (12,to_date('09/08/23','DD/MM/RR'),6000,1,'Factura grande',2,1);
Insert into C##ADMIN_DB.FACTURAS (FACTURA_ID,FECHA,TOTAL,EMPLEADO_ID,DESCRIPCION,ID_CLIENTE,PAGO_ID) values (13,to_date('15/08/23','DD/MM/RR'),6000,1,'Factura grande',70,1);
Insert into C##ADMIN_DB.FACTURAS (FACTURA_ID,FECHA,TOTAL,EMPLEADO_ID,DESCRIPCION,ID_CLIENTE,PAGO_ID) values (9,to_date('02/08/23','DD/MM/RR'),2000,1,'Factura grande',2,1);
Insert into C##ADMIN_DB.FACTURAS (FACTURA_ID,FECHA,TOTAL,EMPLEADO_ID,DESCRIPCION,ID_CLIENTE,PAGO_ID) values (8,to_date('02/08/23','DD/MM/RR'),1000,1,'Factura pequeña',2,1);
Insert into C##ADMIN_DB.FACTURAS (FACTURA_ID,FECHA,TOTAL,EMPLEADO_ID,DESCRIPCION,ID_CLIENTE,PAGO_ID) values (11,to_date('02/08/23','DD/MM/RR'),5100,1,'Factura grande',2,1);
REM INSERTING into C##ADMIN_DB.PAGOS
SET DEFINE OFF;
Insert into C##ADMIN_DB.PAGOS (PAGO_ID,DIRECCION_ID,MONTO,ID_PEDIDO) values (4,2,925,5);
Insert into C##ADMIN_DB.PAGOS (PAGO_ID,DIRECCION_ID,MONTO,ID_PEDIDO) values (1,2,1000,2);
Insert into C##ADMIN_DB.PAGOS (PAGO_ID,DIRECCION_ID,MONTO,ID_PEDIDO) values (5,2,9250,5);
REM INSERTING into C##ADMIN_DB.PEDIDOS
SET DEFINE OFF;
Insert into C##ADMIN_DB.PEDIDOS (ID_PEDIDO,ID_CLIENTE,ID_PRODUCTO,FECHA,TOTAL_FACTURA,ESTADO_PRODUCTO,CANTIDAD) values (1,2,1,to_date('25/12/96','DD/MM/RR'),1000,'Testeo',null);
Insert into C##ADMIN_DB.PEDIDOS (ID_PEDIDO,ID_CLIENTE,ID_PRODUCTO,FECHA,TOTAL_FACTURA,ESTADO_PRODUCTO,CANTIDAD) values (5,2,1,to_date('09/08/23','DD/MM/RR'),909.65,'En stock',35);
Insert into C##ADMIN_DB.PEDIDOS (ID_PEDIDO,ID_CLIENTE,ID_PRODUCTO,FECHA,TOTAL_FACTURA,ESTADO_PRODUCTO,CANTIDAD) values (2,2,2,to_date('02/08/23','DD/MM/RR'),77.97,'Disponible',10);
Insert into C##ADMIN_DB.PEDIDOS (ID_PEDIDO,ID_CLIENTE,ID_PRODUCTO,FECHA,TOTAL_FACTURA,ESTADO_PRODUCTO,CANTIDAD) values (3,2,1,to_date('02/08/23','DD/MM/RR'),259.9,'Disponible',10);
Insert into C##ADMIN_DB.PEDIDOS (ID_PEDIDO,ID_CLIENTE,ID_PRODUCTO,FECHA,TOTAL_FACTURA,ESTADO_PRODUCTO,CANTIDAD) values (6,70,3,to_date('18/08/23','DD/MM/RR'),499.6,'En stock',40);
REM INSERTING into C##ADMIN_DB.PRODUCTOS
SET DEFINE OFF;
Insert into C##ADMIN_DB.PRODUCTOS (ID_PRODUCTO,ID_PROVEEDOR,NOMBRE,DESCRIPCION,PRECIO,STOCK) values (4,203,'Producto 4','Descripción del Producto 4',50.99,75);
Insert into C##ADMIN_DB.PRODUCTOS (ID_PRODUCTO,ID_PROVEEDOR,NOMBRE,DESCRIPCION,PRECIO,STOCK) values (6,205,'Calzados','Calzados deportivos',200,50);
Insert into C##ADMIN_DB.PRODUCTOS (ID_PRODUCTO,ID_PROVEEDOR,NOMBRE,DESCRIPCION,PRECIO,STOCK) values (5,203,'Componentes CPU','Graficas',1200,100);
Insert into C##ADMIN_DB.PRODUCTOS (ID_PRODUCTO,ID_PROVEEDOR,NOMBRE,DESCRIPCION,PRECIO,STOCK) values (1,201,'Producto 1','Descripción del Producto 1',25.99,100);
Insert into C##ADMIN_DB.PRODUCTOS (ID_PRODUCTO,ID_PROVEEDOR,NOMBRE,DESCRIPCION,PRECIO,STOCK) values (2,202,'Producto 2','Descripción del Producto 2',19.95,50);
Insert into C##ADMIN_DB.PRODUCTOS (ID_PRODUCTO,ID_PROVEEDOR,NOMBRE,DESCRIPCION,PRECIO,STOCK) values (3,203,'Producto 3','Descripción del Producto 3',12.49,75);
REM INSERTING into C##ADMIN_DB.PROVEEDORES
SET DEFINE OFF;
Insert into C##ADMIN_DB.PROVEEDORES (ID_PROVEEDOR,NOMBRE,DESCRIPCION,TELEFONO,CORREO) values (205,'Proveedor E','Descripcion proveedor E','+23386762233','proveedorE@gmail.com');
Insert into C##ADMIN_DB.PROVEEDORES (ID_PROVEEDOR,NOMBRE,DESCRIPCION,TELEFONO,CORREO) values (204,'Proveedor D','Descripción del Proveedor D','+8888889999','proveedord@ejemplo.com');
Insert into C##ADMIN_DB.PROVEEDORES (ID_PROVEEDOR,NOMBRE,DESCRIPCION,TELEFONO,CORREO) values (201,'Proveedor A','Descripción del Proveedor A','+1234567890','proveedora@ejemplo.com');
Insert into C##ADMIN_DB.PROVEEDORES (ID_PROVEEDOR,NOMBRE,DESCRIPCION,TELEFONO,CORREO) values (202,'Proveedor B','Descripción del Proveedor B','+9876543210','proveedorb@ejemplo.com');
Insert into C##ADMIN_DB.PROVEEDORES (ID_PROVEEDOR,NOMBRE,DESCRIPCION,TELEFONO,CORREO) values (203,'Proveedor C','Descripción del Proveedor C','+1112225555','proveedorc@ejemplo.com');
REM INSERTING into C##ADMIN_DB.VISTA_CLIENTES
SET DEFINE OFF;
Insert into C##ADMIN_DB.VISTA_CLIENTES (ID_CLIENTE,NOMBRE,DESCRIPCION,TELEFONO,CORREO) values (70,'TEST','TEST','888888888','F@F.COM');
Insert into C##ADMIN_DB.VISTA_CLIENTES (ID_CLIENTE,NOMBRE,DESCRIPCION,TELEFONO,CORREO) values (2,'TESTfabian','TEST','3535999','3535');
Insert into C##ADMIN_DB.VISTA_CLIENTES (ID_CLIENTE,NOMBRE,DESCRIPCION,TELEFONO,CORREO) values (4,'Johan Perez','Cliente del departamento de Electronica','55556666','johan1@gmail.com');
Insert into C##ADMIN_DB.VISTA_CLIENTES (ID_CLIENTE,NOMBRE,DESCRIPCION,TELEFONO,CORREO) values (3,'Fabian Ruiz','Cliente del departamento de Zapatos','88887777','fabianr@gmail.com');
REM INSERTING into C##ADMIN_DB.VISTA_CLIENTES_PEDIDOS
SET DEFINE OFF;
Insert into C##ADMIN_DB.VISTA_CLIENTES_PEDIDOS (ID_CLIENTE,NOMBRE,ID_PRODUCTO,ID_PEDIDO,FECHA,TOTAL_FACTURA,ESTADO_PRODUCTO) values (2,'TESTfabian',1,1,to_date('25/12/96','DD/MM/RR'),1000,'Testeo');
Insert into C##ADMIN_DB.VISTA_CLIENTES_PEDIDOS (ID_CLIENTE,NOMBRE,ID_PRODUCTO,ID_PEDIDO,FECHA,TOTAL_FACTURA,ESTADO_PRODUCTO) values (2,'TESTfabian',1,5,to_date('09/08/23','DD/MM/RR'),909.65,'En stock');
Insert into C##ADMIN_DB.VISTA_CLIENTES_PEDIDOS (ID_CLIENTE,NOMBRE,ID_PRODUCTO,ID_PEDIDO,FECHA,TOTAL_FACTURA,ESTADO_PRODUCTO) values (2,'TESTfabian',2,2,to_date('02/08/23','DD/MM/RR'),77.97,'Disponible');
Insert into C##ADMIN_DB.VISTA_CLIENTES_PEDIDOS (ID_CLIENTE,NOMBRE,ID_PRODUCTO,ID_PEDIDO,FECHA,TOTAL_FACTURA,ESTADO_PRODUCTO) values (2,'TESTfabian',1,3,to_date('02/08/23','DD/MM/RR'),259.9,'Disponible');
Insert into C##ADMIN_DB.VISTA_CLIENTES_PEDIDOS (ID_CLIENTE,NOMBRE,ID_PRODUCTO,ID_PEDIDO,FECHA,TOTAL_FACTURA,ESTADO_PRODUCTO) values (70,'TEST',3,6,to_date('18/08/23','DD/MM/RR'),499.6,'En stock');
REM INSERTING into C##ADMIN_DB.VISTA_DIRECCIONES
SET DEFINE OFF;
Insert into C##ADMIN_DB.VISTA_DIRECCIONES (DIRECCION_ID,ID_CLIENTE,PROVINCIA,CANTON,DISTRITO,DETALLE_DIRECCION) values (5,3,'San Jose','San jose','Mercedez','Calle 56, Casa 070');
Insert into C##ADMIN_DB.VISTA_DIRECCIONES (DIRECCION_ID,ID_CLIENTE,PROVINCIA,CANTON,DISTRITO,DETALLE_DIRECCION) values (2,2,null,null,null,null);
Insert into C##ADMIN_DB.VISTA_DIRECCIONES (DIRECCION_ID,ID_CLIENTE,PROVINCIA,CANTON,DISTRITO,DETALLE_DIRECCION) values (4,4,'Cartgo','Cartago','Oriental','Calle 3, Casa 456');
Insert into C##ADMIN_DB.VISTA_DIRECCIONES (DIRECCION_ID,ID_CLIENTE,PROVINCIA,CANTON,DISTRITO,DETALLE_DIRECCION) values (3,2,'San Jose','Escazu','San Rafael','Calle 1, Casa 123');
REM INSERTING into C##ADMIN_DB.VISTA_PRODUCTOS
SET DEFINE OFF;
Insert into C##ADMIN_DB.VISTA_PRODUCTOS (ID_PRODUCTO,ID_PROVEEDOR,NOMBRE,DESCRIPCION,PRECIO,STOCK) values (4,203,'Producto 4','Descripción del Producto 4',50.99,75);
Insert into C##ADMIN_DB.VISTA_PRODUCTOS (ID_PRODUCTO,ID_PROVEEDOR,NOMBRE,DESCRIPCION,PRECIO,STOCK) values (6,205,'Calzados','Calzados deportivos',200,50);
Insert into C##ADMIN_DB.VISTA_PRODUCTOS (ID_PRODUCTO,ID_PROVEEDOR,NOMBRE,DESCRIPCION,PRECIO,STOCK) values (5,203,'Componentes CPU','Graficas',1200,100);
Insert into C##ADMIN_DB.VISTA_PRODUCTOS (ID_PRODUCTO,ID_PROVEEDOR,NOMBRE,DESCRIPCION,PRECIO,STOCK) values (1,201,'Producto 1','Descripción del Producto 1',25.99,100);
Insert into C##ADMIN_DB.VISTA_PRODUCTOS (ID_PRODUCTO,ID_PROVEEDOR,NOMBRE,DESCRIPCION,PRECIO,STOCK) values (2,202,'Producto 2','Descripción del Producto 2',19.95,50);
Insert into C##ADMIN_DB.VISTA_PRODUCTOS (ID_PRODUCTO,ID_PROVEEDOR,NOMBRE,DESCRIPCION,PRECIO,STOCK) values (3,203,'Producto 3','Descripción del Producto 3',12.49,75);
REM INSERTING into C##ADMIN_DB.VISTA_PROVEEDORES_PRODUCTOS
SET DEFINE OFF;
Insert into C##ADMIN_DB.VISTA_PROVEEDORES_PRODUCTOS (ID_PRODUCTO,NOMBRE_PRODUCTO,DESCRIPCION,STOCK,ID_PROVEEDOR,NOMBRE_PROVEEDOR) values (4,'Producto 4','Descripción del Producto 4',75,203,'Proveedor C');
Insert into C##ADMIN_DB.VISTA_PROVEEDORES_PRODUCTOS (ID_PRODUCTO,NOMBRE_PRODUCTO,DESCRIPCION,STOCK,ID_PROVEEDOR,NOMBRE_PROVEEDOR) values (6,'Calzados','Calzados deportivos',50,205,'Proveedor E');
Insert into C##ADMIN_DB.VISTA_PROVEEDORES_PRODUCTOS (ID_PRODUCTO,NOMBRE_PRODUCTO,DESCRIPCION,STOCK,ID_PROVEEDOR,NOMBRE_PROVEEDOR) values (5,'Componentes CPU','Graficas',100,203,'Proveedor C');
Insert into C##ADMIN_DB.VISTA_PROVEEDORES_PRODUCTOS (ID_PRODUCTO,NOMBRE_PRODUCTO,DESCRIPCION,STOCK,ID_PROVEEDOR,NOMBRE_PROVEEDOR) values (1,'Producto 1','Descripción del Producto 1',100,201,'Proveedor A');
Insert into C##ADMIN_DB.VISTA_PROVEEDORES_PRODUCTOS (ID_PRODUCTO,NOMBRE_PRODUCTO,DESCRIPCION,STOCK,ID_PROVEEDOR,NOMBRE_PROVEEDOR) values (2,'Producto 2','Descripción del Producto 2',50,202,'Proveedor B');
Insert into C##ADMIN_DB.VISTA_PROVEEDORES_PRODUCTOS (ID_PRODUCTO,NOMBRE_PRODUCTO,DESCRIPCION,STOCK,ID_PROVEEDOR,NOMBRE_PROVEEDOR) values (3,'Producto 3','Descripción del Producto 3',75,203,'Proveedor C');
--------------------------------------------------------
--  DDL for Index SYS_C007500
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007500" ON "C##ADMIN_DB"."CLIENTES" ("ID_CLIENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007502
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007502" ON "C##ADMIN_DB"."PROVEEDORES" ("ID_PROVEEDOR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007545
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007545" ON "C##ADMIN_DB"."ADMINISTRADORES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007586
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007586" ON "C##ADMIN_DB"."PRODUCTOS" ("ID_PRODUCTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007588
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007588" ON "C##ADMIN_DB"."PEDIDOS" ("ID_PEDIDO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007591
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007591" ON "C##ADMIN_DB"."DIRECCIONES" ("DIRECCION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007593
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007593" ON "C##ADMIN_DB"."EMPLEADO" ("EMPLEADO_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007595
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007595" ON "C##ADMIN_DB"."DEPARTAMENTOS" ("DEPARTAMENTOS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007598
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007598" ON "C##ADMIN_DB"."DETALLES_PEDIDO" ("ID_DETALLE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007601
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007601" ON "C##ADMIN_DB"."FACTURAS" ("FACTURA_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007603
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007603" ON "C##ADMIN_DB"."PAGOS" ("PAGO_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007545
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007545" ON "C##ADMIN_DB"."ADMINISTRADORES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007500
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007500" ON "C##ADMIN_DB"."CLIENTES" ("ID_CLIENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007595
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007595" ON "C##ADMIN_DB"."DEPARTAMENTOS" ("DEPARTAMENTOS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007598
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007598" ON "C##ADMIN_DB"."DETALLES_PEDIDO" ("ID_DETALLE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007591
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007591" ON "C##ADMIN_DB"."DIRECCIONES" ("DIRECCION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007593
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007593" ON "C##ADMIN_DB"."EMPLEADO" ("EMPLEADO_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007601
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007601" ON "C##ADMIN_DB"."FACTURAS" ("FACTURA_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007603
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007603" ON "C##ADMIN_DB"."PAGOS" ("PAGO_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007588
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007588" ON "C##ADMIN_DB"."PEDIDOS" ("ID_PEDIDO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007586
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007586" ON "C##ADMIN_DB"."PRODUCTOS" ("ID_PRODUCTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007502
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##ADMIN_DB"."SYS_C007502" ON "C##ADMIN_DB"."PROVEEDORES" ("ID_PROVEEDOR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger TR_ACTUALIZAR_DESCRIPCION_FACTURA
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##ADMIN_DB"."TR_ACTUALIZAR_DESCRIPCION_FACTURA" 
BEFORE INSERT OR UPDATE ON Facturas
FOR EACH ROW
BEGIN
    IF :NEW.total > 1000 THEN
        :NEW.descripcion := 'Factura grande';
    ELSE
        :NEW.descripcion := 'Factura pequeña';
    END IF;
END;
/
ALTER TRIGGER "C##ADMIN_DB"."TR_ACTUALIZAR_DESCRIPCION_FACTURA" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_ACTUALIZAR_FECHA_FACTURA
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##ADMIN_DB"."TR_ACTUALIZAR_FECHA_FACTURA" 
BEFORE INSERT OR UPDATE ON Facturas
FOR EACH ROW
BEGIN
    :NEW.fecha := SYSDATE; -- Actualizar el campo "fecha" con la fecha actual del sistema
END;
/
ALTER TRIGGER "C##ADMIN_DB"."TR_ACTUALIZAR_FECHA_FACTURA" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_ACTUALIZAR_FECHA_PEDIDOS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##ADMIN_DB"."TR_ACTUALIZAR_FECHA_PEDIDOS" 
BEFORE INSERT OR UPDATE ON Pedidos
FOR EACH ROW
BEGIN
    :NEW.fecha := SYSDATE;
END;
/
ALTER TRIGGER "C##ADMIN_DB"."TR_ACTUALIZAR_FECHA_PEDIDOS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_CALCULAR_TOTAL_FACTURA_PEDIDOS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##ADMIN_DB"."TR_CALCULAR_TOTAL_FACTURA_PEDIDOS" 
BEFORE INSERT ON pedidos
FOR EACH ROW
DECLARE
    v_precio DECIMAL(10,2);
BEGIN
    SELECT precio INTO v_precio
    FROM productos
    WHERE id_producto = :NEW.id_producto;

    :NEW.total_factura := v_precio * :NEW.cantidad;
END;
/
ALTER TRIGGER "C##ADMIN_DB"."TR_CALCULAR_TOTAL_FACTURA_PEDIDOS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_ACTUALIZAR_FECHA_FACTURA
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##ADMIN_DB"."TR_ACTUALIZAR_FECHA_FACTURA" 
BEFORE INSERT OR UPDATE ON Facturas
FOR EACH ROW
BEGIN
    :NEW.fecha := SYSDATE; -- Actualizar el campo "fecha" con la fecha actual del sistema
END;
/
ALTER TRIGGER "C##ADMIN_DB"."TR_ACTUALIZAR_FECHA_FACTURA" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_ACTUALIZAR_DESCRIPCION_FACTURA
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##ADMIN_DB"."TR_ACTUALIZAR_DESCRIPCION_FACTURA" 
BEFORE INSERT OR UPDATE ON Facturas
FOR EACH ROW
BEGIN
    IF :NEW.total > 1000 THEN
        :NEW.descripcion := 'Factura grande';
    ELSE
        :NEW.descripcion := 'Factura pequeña';
    END IF;
END;
/
ALTER TRIGGER "C##ADMIN_DB"."TR_ACTUALIZAR_DESCRIPCION_FACTURA" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_ACTUALIZAR_FECHA_PEDIDOS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##ADMIN_DB"."TR_ACTUALIZAR_FECHA_PEDIDOS" 
BEFORE INSERT OR UPDATE ON Pedidos
FOR EACH ROW
BEGIN
    :NEW.fecha := SYSDATE;
END;
/
ALTER TRIGGER "C##ADMIN_DB"."TR_ACTUALIZAR_FECHA_PEDIDOS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_CALCULAR_TOTAL_FACTURA_PEDIDOS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##ADMIN_DB"."TR_CALCULAR_TOTAL_FACTURA_PEDIDOS" 
BEFORE INSERT ON pedidos
FOR EACH ROW
DECLARE
    v_precio DECIMAL(10,2);
BEGIN
    SELECT precio INTO v_precio
    FROM productos
    WHERE id_producto = :NEW.id_producto;

    :NEW.total_factura := v_precio * :NEW.cantidad;
END;
/
ALTER TRIGGER "C##ADMIN_DB"."TR_CALCULAR_TOTAL_FACTURA_PEDIDOS" ENABLE;
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."ELIMINAR_CLIENTE" (
    p_id_cliente clientes.id_cliente%TYPE
)
AS
BEGIN
    DELETE FROM clientes WHERE id_cliente = p_id_cliente;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_DEPARTAMENTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."ELIMINAR_DEPARTAMENTO" (
    p_departamentos_id Departamentos.departamentos_id%TYPE
) AS
BEGIN
    DELETE FROM Departamentos
    WHERE departamentos_id = p_departamentos_id;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_DETALLE_PEDIDO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."ELIMINAR_DETALLE_PEDIDO" (p_id_detalle INT) AS
BEGIN
    DELETE FROM Detalles_pedido WHERE id_detalle = p_id_detalle;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_DIRECCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."ELIMINAR_DIRECCION" (p_direccion_id INT) AS
BEGIN
    DELETE FROM Direcciones WHERE direccion_id = p_direccion_id;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_EMPLEADO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."ELIMINAR_EMPLEADO" (p_empleado_id Empleado.empleado_id%TYPE) AS
BEGIN
    DELETE FROM Empleado
    WHERE empleado_id = p_empleado_id;
    COMMIT;
END Eliminar_Empleado;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_FACTURA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."ELIMINAR_FACTURA" (
    p_factura_id IN INT
) AS
BEGIN
    DELETE FROM Facturas
    WHERE factura_id = p_factura_id;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_PAGO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."ELIMINAR_PAGO" (p_pago_id INT) AS
BEGIN
    DELETE FROM Pagos WHERE pago_id = p_pago_id;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_PEDIDO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."ELIMINAR_PEDIDO" (p_id_pedido INT)
IS
BEGIN
    DELETE FROM pedidos WHERE id_pedido = p_id_pedido;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_PRODUCTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."ELIMINAR_PRODUCTO" (p_id_producto INT) AS
BEGIN
    DELETE FROM productos
    WHERE id_producto = p_id_producto;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_PROVEEDOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."ELIMINAR_PROVEEDOR" (
    p_id_proveedor proveedores.id_proveedor%TYPE
)
AS
BEGIN
    DELETE FROM proveedores WHERE id_proveedor = p_id_proveedor;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure INSERTAR_ADMINISTRADORES
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."INSERTAR_ADMINISTRADORES" (
    p_id INT,
    p_nombre VARCHAR,
    p_email VARCHAR,
    p_contraseña VARCHAR
)
AS
BEGIN
    INSERT INTO administradores (id, nombre, email, contraseña)
    VALUES (p_id, p_nombre, p_email, p_contraseña);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure INSERTAR_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."INSERTAR_CLIENTE" (
    p_id_cliente clientes.id_cliente%TYPE,
    p_nombre clientes.nombre%TYPE,
    p_descripcion clientes.descripcion%TYPE,
    p_telefono clientes.telefono%TYPE,
    p_correo clientes.correo%TYPE
)
AS
BEGIN
    INSERT INTO clientes (id_cliente, nombre, descripcion, telefono, correo)
    VALUES (p_id_cliente, p_nombre, p_descripcion, p_telefono, p_correo);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure INSERTAR_DEPARTAMENTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."INSERTAR_DEPARTAMENTO" (
    p_departamentos_id Departamentos.departamentos_id%TYPE,
    p_nombre Departamentos.nombre%TYPE,
    p_ubicacion Departamentos.ubicacion%TYPE,
    p_id_proveedor Departamentos.id_proveedor%TYPE,
    p_empleado_id Departamentos.empleado_id%TYPE
) AS
BEGIN
    INSERT INTO Departamentos (departamentos_id, nombre, ubicacion, id_proveedor, empleado_id)
    VALUES (p_departamentos_id, p_nombre, p_ubicacion, p_id_proveedor, p_empleado_id);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure INSERTAR_DETALLE_PEDIDO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."INSERTAR_DETALLE_PEDIDO" (
    p_id_detalle INT,
    p_cantidad INT,
    p_precio_unitario DECIMAL,
    p_id_pedido INT,
    p_direccion_id INT
) AS
BEGIN
    INSERT INTO Detalles_pedido (id_detalle, cantidad, precio_unitario, id_pedido, direccion_id)
    VALUES (p_id_detalle, p_cantidad, p_precio_unitario, p_id_pedido, p_direccion_id);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure INSERTAR_DIRECCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."INSERTAR_DIRECCION" (
    p_direccion_id INT,
    p_id_cliente INT,
    p_provincia VARCHAR,
    p_canton VARCHAR,
    p_distrito VARCHAR,
    p_detalle_direccion VARCHAR
) AS
BEGIN
    INSERT INTO Direcciones (direccion_id, id_cliente, provincia, canton, distrito, detalle_direccion)
    VALUES (p_direccion_id, p_id_cliente, p_provincia, p_canton, p_distrito, p_detalle_direccion);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure INSERTAR_EMPLEADO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."INSERTAR_EMPLEADO" (
    p_empleado_id Empleado.empleado_id%TYPE,
    p_nombre Empleado.nombre%TYPE,
    p_apellido Empleado.apellido%TYPE,
    p_fecha_nacimiento Empleado.fecha_nacimiento%TYPE,
    p_puesto Empleado.Puesto%TYPE,
    p_id_pedidos Empleado.id_pedidos%TYPE
) AS
BEGIN
    INSERT INTO Empleado (empleado_id, nombre, apellido, fecha_nacimiento, Puesto, id_pedidos)
    VALUES (p_empleado_id, p_nombre, p_apellido, p_fecha_nacimiento, p_puesto, p_id_pedidos);
    COMMIT;
END Insertar_Empleado;

/
--------------------------------------------------------
--  DDL for Procedure INSERTAR_FACTURA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."INSERTAR_FACTURA" (
    p_factura_id IN INT,
    p_total IN DECIMAL,
    p_empleado_id IN INT,
    p_id_cliente IN INT,
    p_pago_id IN INT
) AS
BEGIN
    INSERT INTO Facturas (factura_id, total, empleado_id, id_cliente, pago_id)
    VALUES (p_factura_id, p_total, p_empleado_id, p_id_cliente, p_pago_id);
END;

/
--------------------------------------------------------
--  DDL for Procedure INSERTAR_PAGO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."INSERTAR_PAGO" (
    p_pago_id INT,
    p_direccion_id INT,
    p_monto DECIMAL,
    p_id_pedido INT
) AS
BEGIN
    INSERT INTO Pagos (pago_id, direccion_id, monto, id_pedido)
    VALUES (p_pago_id, p_direccion_id, p_monto, p_id_pedido);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure INSERTAR_PEDIDO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."INSERTAR_PEDIDO" (
    p_id_pedido INT,
    p_id_cliente INT,
    p_id_producto INT,
    p_estado_producto VARCHAR,
    p_cantidad INT
)
IS
BEGIN
    INSERT INTO pedidos (id_pedido, id_cliente, id_producto, estado_producto, cantidad)
    VALUES (p_id_pedido, p_id_cliente, p_id_producto, p_estado_producto, p_cantidad);
END;

/
--------------------------------------------------------
--  DDL for Procedure INSERTAR_PRODUCTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."INSERTAR_PRODUCTO" (
    p_id_producto INT,
    p_id_proveedor INT,
    p_nombre VARCHAR,
    p_descripcion VARCHAR,
    p_precio DECIMAL,
    p_stock INT
) AS
BEGIN
    INSERT INTO productos (id_producto, id_proveedor, nombre, descripcion, precio, stock)
    VALUES (p_id_producto, p_id_proveedor, p_nombre, p_descripcion, p_precio, p_stock);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure INSERTAR_PROVEEDOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."INSERTAR_PROVEEDOR" (
    p_id_proveedor proveedores.id_proveedor%TYPE,
    p_nombre proveedores.nombre%TYPE,
    p_descripcion proveedores.descripcion%TYPE,
    p_telefono proveedores.telefono%TYPE,
    p_correo proveedores.correo%TYPE
)
AS
BEGIN
    INSERT INTO proveedores (id_proveedor, nombre, descripcion, telefono, correo)
    VALUES (p_id_proveedor, p_nombre, p_descripcion, p_telefono, p_correo);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure MODIFICAR_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."MODIFICAR_CLIENTE" (
    p_id_cliente clientes.id_cliente%TYPE,
    p_nombre clientes.nombre%TYPE,
    p_descripcion clientes.descripcion%TYPE,
    p_telefono clientes.telefono%TYPE,
    p_correo clientes.correo%TYPE
)
AS
BEGIN
    UPDATE clientes
    SET nombre = p_nombre,
        descripcion = p_descripcion,
        telefono = p_telefono,
        correo = p_correo
    WHERE id_cliente = p_id_cliente;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure MODIFICAR_DEPARTAMENTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."MODIFICAR_DEPARTAMENTO" (
    p_departamentos_id Departamentos.departamentos_id%TYPE,
    p_nombre Departamentos.nombre%TYPE,
    p_ubicacion Departamentos.ubicacion%TYPE,
    p_id_proveedor Departamentos.id_proveedor%TYPE,
    p_empleado_id Departamentos.empleado_id%TYPE
) AS
BEGIN
    UPDATE Departamentos
    SET nombre = p_nombre,
        ubicacion = p_ubicacion,
        id_proveedor = p_id_proveedor,
        empleado_id = p_empleado_id
    WHERE departamentos_id = p_departamentos_id;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure MODIFICAR_DETALLE_PEDIDO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."MODIFICAR_DETALLE_PEDIDO" (
    p_id_detalle INT,
    p_cantidad INT,
    p_precio_unitario DECIMAL,
    p_id_pedido INT,
    p_direccion_id INT
) AS
BEGIN
    UPDATE Detalles_pedido
    SET cantidad = p_cantidad,
        precio_unitario = p_precio_unitario,
        id_pedido = p_id_pedido,
        direccion_id = p_direccion_id
    WHERE id_detalle = p_id_detalle;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure MODIFICAR_DIRECCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."MODIFICAR_DIRECCION" (
    p_direccion_id INT,
    p_id_cliente INT,
    p_provincia VARCHAR,
    p_canton VARCHAR,
    p_distrito VARCHAR,
    p_detalle_direccion VARCHAR
) AS
BEGIN
    UPDATE Direcciones
    SET id_cliente = p_id_cliente,
        provincia = p_provincia,
        canton = p_canton,
        distrito = p_distrito,
        detalle_direccion = p_detalle_direccion
    WHERE direccion_id = p_direccion_id;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure MODIFICAR_EMPLEADO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."MODIFICAR_EMPLEADO" (
    p_empleado_id Empleado.empleado_id%TYPE,
    p_nombre Empleado.nombre%TYPE,
    p_apellido Empleado.apellido%TYPE,
    p_puesto Empleado.Puesto%TYPE
) AS
BEGIN
    UPDATE Empleado
    SET nombre = p_nombre,
        apellido = p_apellido,
        Puesto = p_puesto
    WHERE empleado_id = p_empleado_id;
    COMMIT;
END Modificar_Empleado;

/
--------------------------------------------------------
--  DDL for Procedure MODIFICAR_FACTURA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."MODIFICAR_FACTURA" (
    p_factura_id IN INT,
    p_total IN DECIMAL

) AS
BEGIN
    UPDATE Facturas
    SET total = p_total
    WHERE factura_id = p_factura_id;
END;

/
--------------------------------------------------------
--  DDL for Procedure MODIFICAR_PAGO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."MODIFICAR_PAGO" (
    p_pago_id INT,
    p_direccion_id INT,
    p_monto DECIMAL,
    p_id_pedido INT
) AS
BEGIN
    UPDATE Pagos
    SET direccion_id = p_direccion_id,
        monto = p_monto,
        id_pedido = p_id_pedido
    WHERE pago_id = p_pago_id;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure MODIFICAR_PEDIDO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."MODIFICAR_PEDIDO" (
    p_id_pedido INT,
    p_id_producto INT,
    p_cantidad INT
)
IS
BEGIN
    UPDATE pedidos
    SET id_producto = p_id_producto,
        cantidad = p_cantidad
    WHERE id_pedido = p_id_pedido;
END;

/
--------------------------------------------------------
--  DDL for Procedure MODIFICAR_PRODUCTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."MODIFICAR_PRODUCTO" (
    p_id_producto INT,
    p_id_proveedor INT,
    p_nombre VARCHAR,
    p_descripcion VARCHAR,
    p_precio DECIMAL,
    p_stock INT
) AS
BEGIN
    UPDATE productos
    SET id_proveedor = p_id_proveedor,
        nombre = p_nombre,
        descripcion = p_descripcion,
        precio = p_precio,
        stock = p_stock
    WHERE id_producto = p_id_producto;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure MODIFICAR_PROVEEDOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."MODIFICAR_PROVEEDOR" (
    p_id_proveedor proveedores.id_proveedor%TYPE,
    p_nombre proveedores.nombre%TYPE,
    p_descripcion proveedores.descripcion%TYPE,
    p_telefono proveedores.telefono%TYPE,
    p_correo proveedores.correo%TYPE
)
AS
BEGIN
    UPDATE proveedores
    SET nombre = p_nombre,
        descripcion = p_descripcion,
        telefono = p_telefono,
        correo = p_correo
    WHERE id_proveedor = p_id_proveedor;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure VERIFICAR_ADMINISTRADORES
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."VERIFICAR_ADMINISTRADORES" (
    p_email IN administradores.email%TYPE,
    p_contraseña IN administradores.contraseña%TYPE,
    p_resultado OUT NUMBER
)
AS
BEGIN
    SELECT COUNT(*) INTO p_resultado
    FROM administradores
    WHERE email = p_email AND contraseña = p_contraseña;
END;

/
--------------------------------------------------------
--  DDL for Procedure VER_VISTA_CLIENTES
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##ADMIN_DB"."VER_VISTA_CLIENTES" (cur_out OUT SYS_REFCURSOR)
AS
BEGIN
    OPEN cur_out FOR
        SELECT ID_CLIENTE, NOMBRE, DESCRIPCION, TELEFONO, CORREO
        FROM vista_clientes;
END;

/
--------------------------------------------------------
--  DDL for Package ADMIN_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "C##ADMIN_DB"."ADMIN_DB" AS
PROCEDURE insertar_administradores(
    p_id INT,
    p_nombre VARCHAR,
    p_email VARCHAR,
    p_contraseña VARCHAR
);

PROCEDURE verificar_administradores(
    p_email IN administradores.email%TYPE,
    p_contraseña IN administradores.contraseña%TYPE,
    p_resultado OUT NUMBER
);

END ADMIN_DB;

/
--------------------------------------------------------
--  DDL for Package CLIENTES_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "C##ADMIN_DB"."CLIENTES_DB" AS
---Procedimiento Insertar
PROCEDURE insertar_cliente (
    p_id_cliente clientes.id_cliente%TYPE,
    p_nombre clientes.nombre%TYPE,
    p_descripcion clientes.descripcion%TYPE,
    p_telefono clientes.telefono%TYPE,
    p_correo clientes.correo%TYPE
);
---Procedimiento eliminar
PROCEDURE eliminar_cliente (
    p_id_cliente clientes.id_cliente%TYPE
);
---Procedimiento modificar
PROCEDURE modificar_cliente (
    p_id_cliente clientes.id_cliente%TYPE,
    p_nombre clientes.nombre%TYPE,
    p_descripcion clientes.descripcion%TYPE,
    p_telefono clientes.telefono%TYPE,
    p_correo clientes.correo%TYPE
);
END CLIENTES_DB;

/
--------------------------------------------------------
--  DDL for Package DEPARTAMENTOS_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "C##ADMIN_DB"."DEPARTAMENTOS_DB" AS
    PROCEDURE Insertar_Departamento(
        p_departamentos_id Departamentos.departamentos_id%TYPE,
        p_nombre Departamentos.nombre%TYPE,
        p_ubicacion Departamentos.ubicacion%TYPE,
        p_id_proveedor Departamentos.id_proveedor%TYPE,
        p_empleado_id Departamentos.empleado_id%TYPE
    );

    PROCEDURE Modificar_Departamento(
        p_departamentos_id Departamentos.departamentos_id%TYPE,
        p_nombre Departamentos.nombre%TYPE,
        p_ubicacion Departamentos.ubicacion%TYPE,
        p_id_proveedor Departamentos.id_proveedor%TYPE,
        p_empleado_id Departamentos.empleado_id%TYPE
    );

    PROCEDURE Eliminar_Departamento(
        p_departamentos_id Departamentos.departamentos_id%TYPE
    );
END DEPARTAMENTOS_DB;

/
--------------------------------------------------------
--  DDL for Package DETALLES_PEDIDO_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "C##ADMIN_DB"."DETALLES_PEDIDO_DB" AS
    PROCEDURE Insertar_Detalle_Pedido(
        p_id_detalle INT,
        p_cantidad INT,
        p_precio_unitario DECIMAL,
        p_id_pedido INT,
        p_direccion_id INT
    );

    PROCEDURE Modificar_Detalle_Pedido(
        p_id_detalle INT,
        p_cantidad INT,
        p_precio_unitario DECIMAL,
        p_id_pedido INT,
        p_direccion_id INT
    );

    PROCEDURE Eliminar_Detalle_Pedido(p_id_detalle INT);
END Detalles_Pedido_DB;

/
--------------------------------------------------------
--  DDL for Package DIRECCIONES_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "C##ADMIN_DB"."DIRECCIONES_DB" IS

    PROCEDURE insertar_direccion(
        p_direccion_id INT,
        p_id_cliente INT,
        p_provincia VARCHAR,
        p_canton VARCHAR,
        p_distrito VARCHAR,
        p_detalle_direccion VARCHAR
    );

    PROCEDURE modificar_direccion(
        p_direccion_id INT,
        p_id_cliente INT,
        p_provincia VARCHAR,
        p_canton VARCHAR,
        p_distrito VARCHAR,
        p_detalle_direccion VARCHAR
    );

    PROCEDURE eliminar_direccion(p_direccion_id INT);

END DIRECCIONES_DB;

/
--------------------------------------------------------
--  DDL for Package EMPLEADOS_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "C##ADMIN_DB"."EMPLEADOS_DB" IS

    PROCEDURE Insertar_Empleado(
        p_empleado_id Empleado.empleado_id%TYPE,
        p_nombre Empleado.nombre%TYPE,
        p_apellido Empleado.apellido%TYPE,
        p_fecha_nacimiento Empleado.fecha_nacimiento%TYPE,
        p_puesto Empleado.Puesto%TYPE,
        p_id_pedidos Empleado.id_pedidos%TYPE
    );

    PROCEDURE Modificar_Empleado(
        p_empleado_id Empleado.empleado_id%TYPE,
        p_nombre Empleado.nombre%TYPE,
        p_apellido Empleado.apellido%TYPE,
        p_puesto Empleado.Puesto%TYPE
    );

    PROCEDURE Eliminar_Empleado(p_empleado_id Empleado.empleado_id%TYPE);

END EMPLEADOS_DB;

/
--------------------------------------------------------
--  DDL for Package FACTURAS_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "C##ADMIN_DB"."FACTURAS_DB" AS
    PROCEDURE Insertar_Factura(
        p_factura_id INT,
        p_total DECIMAL,
        p_empleado_id INT,
        p_id_cliente INT,
        p_pago_id INT
    );

    PROCEDURE Modificar_Factura(
        p_factura_id INT,
        p_total DECIMAL
    );

    PROCEDURE Eliminar_Factura(p_factura_id INT);
END FACTURAS_DB;

/
--------------------------------------------------------
--  DDL for Package PAGOS_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "C##ADMIN_DB"."PAGOS_DB" IS

    PROCEDURE insertar_pago(
        p_pago_id INT,
        p_direccion_id INT,
        p_monto DECIMAL,
        p_id_pedido INT
    );

    PROCEDURE modificar_pago(
        p_pago_id INT,
        p_direccion_id INT,
        p_monto DECIMAL,
        p_id_pedido INT
    );

    PROCEDURE eliminar_pago(p_pago_id INT);

END PAGOS_DB;

/
--------------------------------------------------------
--  DDL for Package PEDIDOS_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "C##ADMIN_DB"."PEDIDOS_DB" AS
    PROCEDURE Insertar_Pedido(
        p_id_pedido INT,
        p_id_cliente INT,
        p_id_producto INT,
        p_estado_producto VARCHAR,
        p_cantidad INT
    );

    PROCEDURE Modificar_Pedido(
        p_id_pedido INT,
        p_id_producto INT,
        p_cantidad INT
    );

    PROCEDURE Eliminar_Pedido(p_id_pedido INT);
END PEDIDOS_DB;

/
--------------------------------------------------------
--  DDL for Package PRODUCTOS_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "C##ADMIN_DB"."PRODUCTOS_DB" IS

    PROCEDURE insertar_producto(
        p_id_producto INT,
        p_id_proveedor INT,
        p_nombre VARCHAR,
        p_descripcion VARCHAR,
        p_precio DECIMAL,
        p_stock INT
    );

    PROCEDURE modificar_producto(
        p_id_producto INT,
        p_id_proveedor INT,
        p_nombre VARCHAR,
        p_descripcion VARCHAR,
        p_precio DECIMAL,
        p_stock INT
    );

    PROCEDURE eliminar_producto(p_id_producto INT);

END PRODUCTOS_DB;

/
--------------------------------------------------------
--  DDL for Package PROVEEDORES_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "C##ADMIN_DB"."PROVEEDORES_DB" AS
---Procedimiento Insertar
PROCEDURE insertar_proveedor (
    p_id_proveedor proveedores.id_proveedor%TYPE,
    p_nombre proveedores.nombre%TYPE,
    p_descripcion proveedores.descripcion%TYPE,
    p_telefono proveedores.telefono%TYPE,
    p_correo proveedores.correo%TYPE
);
---Procedimiento eliminar
PROCEDURE eliminar_proveedor (
    p_id_proveedor proveedores.id_proveedor%TYPE
);
---Procedimiento modificar
PROCEDURE modificar_proveedor (
    p_id_proveedor proveedores.id_proveedor%TYPE,
    p_nombre proveedores.nombre%TYPE,
    p_descripcion proveedores.descripcion%TYPE,
    p_telefono proveedores.telefono%TYPE,
    p_correo proveedores.correo%TYPE
);
END PROVEEDORES_DB;

/
--------------------------------------------------------
--  DDL for Package Body ADMIN_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "C##ADMIN_DB"."ADMIN_DB" AS
PROCEDURE insertar_administradores(
    p_id INT,
    p_nombre VARCHAR,
    p_email VARCHAR,
    p_contraseña VARCHAR
)
AS
BEGIN
    INSERT INTO administradores (id, nombre, email, contraseña)
    VALUES (p_id, p_nombre, p_email, p_contraseña);
    COMMIT;
END;

PROCEDURE verificar_administradores(
    p_email IN administradores.email%TYPE,
    p_contraseña IN administradores.contraseña%TYPE,
    p_resultado OUT NUMBER
)
AS
BEGIN
    SELECT COUNT(*) INTO p_resultado
    FROM administradores
    WHERE email = p_email AND contraseña = p_contraseña;
END;

END ADMIN_DB;

/
--------------------------------------------------------
--  DDL for Package Body CLIENTES_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "C##ADMIN_DB"."CLIENTES_DB" AS
---Procedimiento Insertar
PROCEDURE insertar_cliente (
    p_id_cliente clientes.id_cliente%TYPE,
    p_nombre clientes.nombre%TYPE,
    p_descripcion clientes.descripcion%TYPE,
    p_telefono clientes.telefono%TYPE,
    p_correo clientes.correo%TYPE
)
AS
BEGIN
    INSERT INTO clientes (id_cliente, nombre, descripcion, telefono, correo)
    VALUES (p_id_cliente, p_nombre, p_descripcion, p_telefono, p_correo);
    COMMIT;
END;
---Procedimiento eliminar
PROCEDURE eliminar_cliente (
    p_id_cliente clientes.id_cliente%TYPE
)
AS
BEGIN
    DELETE FROM clientes WHERE id_cliente = p_id_cliente;
    COMMIT;
END;
---Procedimiento modificar
PROCEDURE modificar_cliente (
    p_id_cliente clientes.id_cliente%TYPE,
    p_nombre clientes.nombre%TYPE,
    p_descripcion clientes.descripcion%TYPE,
    p_telefono clientes.telefono%TYPE,
    p_correo clientes.correo%TYPE
)
AS
BEGIN
    UPDATE clientes
    SET nombre = p_nombre,
        descripcion = p_descripcion,
        telefono = p_telefono,
        correo = p_correo
    WHERE id_cliente = p_id_cliente;
    COMMIT;
END;

END CLIENTES_DB;

/
--------------------------------------------------------
--  DDL for Package Body DEPARTAMENTOS_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "C##ADMIN_DB"."DEPARTAMENTOS_DB" AS
    PROCEDURE Insertar_Departamento(
        p_departamentos_id Departamentos.departamentos_id%TYPE,
        p_nombre Departamentos.nombre%TYPE,
        p_ubicacion Departamentos.ubicacion%TYPE,
        p_id_proveedor Departamentos.id_proveedor%TYPE,
        p_empleado_id Departamentos.empleado_id%TYPE
    ) AS
    BEGIN
        INSERT INTO Departamentos (departamentos_id, nombre, ubicacion, id_proveedor, empleado_id)
        VALUES (p_departamentos_id, p_nombre, p_ubicacion, p_id_proveedor, p_empleado_id);
        COMMIT;
    END Insertar_Departamento;

    PROCEDURE Modificar_Departamento(
        p_departamentos_id Departamentos.departamentos_id%TYPE,
        p_nombre Departamentos.nombre%TYPE,
        p_ubicacion Departamentos.ubicacion%TYPE,
        p_id_proveedor Departamentos.id_proveedor%TYPE,
        p_empleado_id Departamentos.empleado_id%TYPE
    ) AS
    BEGIN
        UPDATE Departamentos
        SET nombre = p_nombre,
            ubicacion = p_ubicacion,
            id_proveedor = p_id_proveedor,
            empleado_id = p_empleado_id
        WHERE departamentos_id = p_departamentos_id;
        COMMIT;
    END Modificar_Departamento;

    PROCEDURE Eliminar_Departamento(
        p_departamentos_id Departamentos.departamentos_id%TYPE
    ) AS
    BEGIN
        DELETE FROM Departamentos
        WHERE departamentos_id = p_departamentos_id;
        COMMIT;
    END Eliminar_Departamento;
END DEPARTAMENTOS_DB;

/
--------------------------------------------------------
--  DDL for Package Body DETALLES_PEDIDO_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "C##ADMIN_DB"."DETALLES_PEDIDO_DB" AS
    PROCEDURE Insertar_Detalle_Pedido(
        p_id_detalle INT,
        p_cantidad INT,
        p_precio_unitario DECIMAL,
        p_id_pedido INT,
        p_direccion_id INT
    ) AS
    BEGIN
        INSERT INTO Detalles_pedido (id_detalle, cantidad, precio_unitario, id_pedido, direccion_id)
        VALUES (p_id_detalle, p_cantidad, p_precio_unitario, p_id_pedido, p_direccion_id);
        COMMIT;
    END Insertar_Detalle_Pedido;

    PROCEDURE Modificar_Detalle_Pedido(
        p_id_detalle INT,
        p_cantidad INT,
        p_precio_unitario DECIMAL,
        p_id_pedido INT,
        p_direccion_id INT
    ) AS
    BEGIN
        UPDATE Detalles_pedido
        SET cantidad = p_cantidad,
            precio_unitario = p_precio_unitario,
            id_pedido = p_id_pedido,
            direccion_id = p_direccion_id
        WHERE id_detalle = p_id_detalle;
        COMMIT;
    END Modificar_Detalle_Pedido;

    PROCEDURE Eliminar_Detalle_Pedido(p_id_detalle INT) AS
    BEGIN
        DELETE FROM Detalles_pedido WHERE id_detalle = p_id_detalle;
        COMMIT;
    END Eliminar_Detalle_Pedido;
END Detalles_Pedido_DB;

/
--------------------------------------------------------
--  DDL for Package Body DIRECCIONES_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "C##ADMIN_DB"."DIRECCIONES_DB" IS

    PROCEDURE insertar_direccion(
        p_direccion_id INT,
        p_id_cliente INT,
        p_provincia VARCHAR,
        p_canton VARCHAR,
        p_distrito VARCHAR,
        p_detalle_direccion VARCHAR
    ) AS
    BEGIN
        INSERT INTO Direcciones (direccion_id, id_cliente, provincia, canton, distrito, detalle_direccion)
        VALUES (p_direccion_id, p_id_cliente, p_provincia, p_canton, p_distrito, p_detalle_direccion);
        COMMIT;
    END insertar_direccion;

    PROCEDURE modificar_direccion(
        p_direccion_id INT,
        p_id_cliente INT,
        p_provincia VARCHAR,
        p_canton VARCHAR,
        p_distrito VARCHAR,
        p_detalle_direccion VARCHAR
    ) AS
    BEGIN
        UPDATE Direcciones
        SET id_cliente = p_id_cliente,
            provincia = p_provincia,
            canton = p_canton,
            distrito = p_distrito,
            detalle_direccion = p_detalle_direccion
        WHERE direccion_id = p_direccion_id;
        COMMIT;
    END modificar_direccion;

    PROCEDURE eliminar_direccion(p_direccion_id INT) AS
    BEGIN
        DELETE FROM Direcciones WHERE direccion_id = p_direccion_id;
        COMMIT;
    END eliminar_direccion;

END DIRECCIONES_DB;

/
--------------------------------------------------------
--  DDL for Package Body EMPLEADOS_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "C##ADMIN_DB"."EMPLEADOS_DB" IS

    PROCEDURE Insertar_Empleado(
        p_empleado_id Empleado.empleado_id%TYPE,
        p_nombre Empleado.nombre%TYPE,
        p_apellido Empleado.apellido%TYPE,
        p_fecha_nacimiento Empleado.fecha_nacimiento%TYPE,
        p_puesto Empleado.Puesto%TYPE,
        p_id_pedidos Empleado.id_pedidos%TYPE
    ) AS
    BEGIN
        INSERT INTO Empleado (empleado_id, nombre, apellido, fecha_nacimiento, Puesto, id_pedidos)
        VALUES (p_empleado_id, p_nombre, p_apellido, p_fecha_nacimiento, p_puesto, p_id_pedidos);
        COMMIT;
    END Insertar_Empleado;

    PROCEDURE Modificar_Empleado(
        p_empleado_id Empleado.empleado_id%TYPE,
        p_nombre Empleado.nombre%TYPE,
        p_apellido Empleado.apellido%TYPE,
        p_puesto Empleado.Puesto%TYPE
    ) AS
    BEGIN
        UPDATE Empleado
        SET nombre = p_nombre,
            apellido = p_apellido,
            Puesto = p_puesto
        WHERE empleado_id = p_empleado_id;
        COMMIT;
    END Modificar_Empleado;

    PROCEDURE Eliminar_Empleado(p_empleado_id Empleado.empleado_id%TYPE) AS
    BEGIN
        DELETE FROM Empleado
        WHERE empleado_id = p_empleado_id;
        COMMIT;
    END Eliminar_Empleado;

END EMPLEADOS_DB;

/
--------------------------------------------------------
--  DDL for Package Body FACTURAS_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "C##ADMIN_DB"."FACTURAS_DB" AS
    PROCEDURE Insertar_Factura(
        p_factura_id INT,
        p_total DECIMAL,
        p_empleado_id INT,
        p_id_cliente INT,
        p_pago_id INT
    ) AS
    BEGIN
        INSERT INTO Facturas (factura_id, total, empleado_id, id_cliente, pago_id)
        VALUES (p_factura_id, p_total, p_empleado_id, p_id_cliente, p_pago_id);
        COMMIT;
    END Insertar_Factura;

    PROCEDURE Modificar_Factura(
        p_factura_id INT,
        p_total DECIMAL
    ) AS
    BEGIN
        UPDATE Facturas
        SET total = p_total
        WHERE factura_id = p_factura_id;
        COMMIT;
    END Modificar_Factura;

    PROCEDURE Eliminar_Factura(p_factura_id INT) AS
    BEGIN
        DELETE FROM Facturas
        WHERE factura_id = p_factura_id;
        COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            RAISE;
    END Eliminar_Factura;
END FACTURAS_DB;

/
--------------------------------------------------------
--  DDL for Package Body PAGOS_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "C##ADMIN_DB"."PAGOS_DB" IS

    PROCEDURE insertar_pago(
        p_pago_id INT,
        p_direccion_id INT,
        p_monto DECIMAL,
        p_id_pedido INT
    ) AS
    BEGIN
        INSERT INTO Pagos (pago_id, direccion_id, monto, id_pedido)
        VALUES (p_pago_id, p_direccion_id, p_monto, p_id_pedido);
        COMMIT;
    END insertar_pago;

    PROCEDURE modificar_pago(
        p_pago_id INT,
        p_direccion_id INT,
        p_monto DECIMAL,
        p_id_pedido INT
    ) AS
    BEGIN
        UPDATE Pagos
        SET direccion_id = p_direccion_id,
            monto = p_monto,
            id_pedido = p_id_pedido
        WHERE pago_id = p_pago_id;
        COMMIT;
    END modificar_pago;

    PROCEDURE eliminar_pago(p_pago_id INT) AS
    BEGIN
        DELETE FROM Pagos WHERE pago_id = p_pago_id;
        COMMIT;
    END eliminar_pago;

END PAGOS_DB;

/
--------------------------------------------------------
--  DDL for Package Body PEDIDOS_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "C##ADMIN_DB"."PEDIDOS_DB" AS
    PROCEDURE Insertar_Pedido(
        p_id_pedido INT,
        p_id_cliente INT,
        p_id_producto INT,
        p_estado_producto VARCHAR,
        p_cantidad INT
    ) AS
    BEGIN
        INSERT INTO pedidos (id_pedido, id_cliente, id_producto, estado_producto, cantidad)
        VALUES (p_id_pedido, p_id_cliente, p_id_producto, p_estado_producto, p_cantidad);
        COMMIT;
    END Insertar_Pedido;

    PROCEDURE Modificar_Pedido(
        p_id_pedido INT,
        p_id_producto INT,
        p_cantidad INT
    ) AS
    BEGIN
        UPDATE pedidos
        SET id_producto = p_id_producto,
            cantidad = p_cantidad
        WHERE id_pedido = p_id_pedido;
        COMMIT;
    END Modificar_Pedido;

    PROCEDURE Eliminar_Pedido(p_id_pedido INT) AS
    BEGIN
        DELETE FROM pedidos WHERE id_pedido = p_id_pedido;
        COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                RAISE;
    END Eliminar_Pedido;
END PEDIDOS_DB;

/
--------------------------------------------------------
--  DDL for Package Body PRODUCTOS_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "C##ADMIN_DB"."PRODUCTOS_DB" IS

    PROCEDURE insertar_producto(
        p_id_producto INT,
        p_id_proveedor INT,
        p_nombre VARCHAR,
        p_descripcion VARCHAR,
        p_precio DECIMAL,
        p_stock INT
    ) AS
    BEGIN
        INSERT INTO productos (id_producto, id_proveedor, nombre, descripcion, precio, stock)
        VALUES (p_id_producto, p_id_proveedor, p_nombre, p_descripcion, p_precio, p_stock);
        COMMIT;
    END insertar_producto;

    PROCEDURE modificar_producto(
        p_id_producto INT,
        p_id_proveedor INT,
        p_nombre VARCHAR,
        p_descripcion VARCHAR,
        p_precio DECIMAL,
        p_stock INT
    ) AS
    BEGIN
        UPDATE productos
        SET id_proveedor = p_id_proveedor,
            nombre = p_nombre,
            descripcion = p_descripcion,
            precio = p_precio,
            stock = p_stock
        WHERE id_producto = p_id_producto;
        COMMIT;
    END modificar_producto;

    PROCEDURE eliminar_producto(p_id_producto INT) AS
    BEGIN
        DELETE FROM productos
        WHERE id_producto = p_id_producto;
        COMMIT;
    END eliminar_producto;

END PRODUCTOS_DB;

/
--------------------------------------------------------
--  DDL for Package Body PROVEEDORES_DB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "C##ADMIN_DB"."PROVEEDORES_DB" AS
---Procedimiento Insertar
PROCEDURE insertar_proveedor (
    p_id_proveedor proveedores.id_proveedor%TYPE,
    p_nombre proveedores.nombre%TYPE,
    p_descripcion proveedores.descripcion%TYPE,
    p_telefono proveedores.telefono%TYPE,
    p_correo proveedores.correo%TYPE
)
AS
BEGIN
    INSERT INTO proveedores (id_proveedor, nombre, descripcion, telefono, correo)
    VALUES (p_id_proveedor, p_nombre, p_descripcion, p_telefono, p_correo);
    COMMIT;
END;
---Procedimiento eliminar
PROCEDURE eliminar_proveedor (
    p_id_proveedor proveedores.id_proveedor%TYPE
)
AS
BEGIN
    DELETE FROM proveedores WHERE id_proveedor = p_id_proveedor;
    COMMIT;
END;

---Procedimiento modificar
PROCEDURE modificar_proveedor (
    p_id_proveedor proveedores.id_proveedor%TYPE,
    p_nombre proveedores.nombre%TYPE,
    p_descripcion proveedores.descripcion%TYPE,
    p_telefono proveedores.telefono%TYPE,
    p_correo proveedores.correo%TYPE
)
AS
BEGIN
    UPDATE proveedores
    SET nombre = p_nombre,
        descripcion = p_descripcion,
        telefono = p_telefono,
        correo = p_correo
    WHERE id_proveedor = p_id_proveedor;
    COMMIT;
END;

END PROVEEDORES_DB;

/
--------------------------------------------------------
--  DDL for Function BUSCAR_PRODUCTOS_POR_CLIENTE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##ADMIN_DB"."BUSCAR_PRODUCTOS_POR_CLIENTE" (p_id_cliente INT)
RETURN SYS_REFCURSOR
AS
    resultado SYS_REFCURSOR;
BEGIN
    OPEN resultado FOR
    SELECT id_cliente, nombre, id_producto, id_pedido, fecha, total_factura, estado_producto
    FROM VISTA_CLIENTES_PEDIDOS
    WHERE ID_CLIENTE = p_id_cliente;

    RETURN resultado;
END;

/
--------------------------------------------------------
--  DDL for Function BUSCAR_PRODUCTOS_POR_PRECIO
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##ADMIN_DB"."BUSCAR_PRODUCTOS_POR_PRECIO" (
    p_precio_min DECIMAL,
    p_precio_max DECIMAL
) RETURN SYS_REFCURSOR AS
    v_resultado SYS_REFCURSOR;
BEGIN
    OPEN v_resultado FOR
        SELECT id_producto, id_proveedor, nombre, descripcion, precio, stock
        FROM vista_productos
        WHERE precio BETWEEN p_precio_min AND p_precio_max;

    RETURN v_resultado;
END;

/
--------------------------------------------------------
--  DDL for Function CALCULAR_DETALLES
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##ADMIN_DB"."CALCULAR_DETALLES" (id_pedido_in INT)
RETURN SYS_REFCURSOR IS
    detalles_cursor SYS_REFCURSOR;
BEGIN
    OPEN detalles_cursor FOR
        SELECT p.cantidad, pr.precio
        FROM pedidos p
        JOIN productos pr ON p.id_producto = pr.id_producto
        WHERE p.id_pedido = id_pedido_in;

    RETURN detalles_cursor;
END;

/
--------------------------------------------------------
--  DDL for Function CALCULAR_PRECIO_FINAL
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##ADMIN_DB"."CALCULAR_PRECIO_FINAL" (id_pedido_in INT) RETURN DECIMAL AS
    v_total_factura DECIMAL(10, 2);
    v_descuento DECIMAL(10, 2);
    v_precio_final DECIMAL(10, 2);
BEGIN
    SELECT total_factura INTO v_total_factura
    FROM pedidos
    WHERE id_pedido = id_pedido_in;

    IF v_total_factura IS NULL THEN
        RAISE_APPLICATION_ERROR(-20001, 'Pedido no encontrado');
    END IF;

    SELECT cantidad
    INTO v_descuento
    FROM pedidos
    WHERE id_pedido = id_pedido_in;

    IF v_descuento > 15 THEN
        v_descuento := v_total_factura * 0.1; -- 10%
    ELSE
        v_descuento := 0;
    END IF;

    v_precio_final := (v_total_factura - v_descuento) * 1.13; -- IVA

    RETURN v_precio_final;
END;

/
--------------------------------------------------------
--  DDL for Function OBTENER_DIRECCIONES_CLIENTE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##ADMIN_DB"."OBTENER_DIRECCIONES_CLIENTE" (
    p_id_cliente IN INT
) RETURN SYS_REFCURSOR AS
    v_resultado SYS_REFCURSOR;
BEGIN
    OPEN v_resultado FOR
        SELECT direccion_id, id_cliente, provincia, canton, distrito, detalle_direccion
        FROM vista_direcciones
        WHERE id_cliente = p_id_cliente;

    RETURN v_resultado;
END obtener_direcciones_cliente;

/
--------------------------------------------------------
--  DDL for Function OBTENER_PRODUCTOS_POR_PROVEEDOR
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##ADMIN_DB"."OBTENER_PRODUCTOS_POR_PROVEEDOR" (
    p_proveedor_id INT
) RETURN SYS_REFCURSOR AS
    result_cursor SYS_REFCURSOR;
BEGIN
    OPEN result_cursor FOR
        SELECT *
        FROM Vista_Proveedores_Productos
        WHERE ID_PROVEEDOR = p_proveedor_id;
    RETURN result_cursor;
END obtener_productos_por_proveedor;

/
--------------------------------------------------------
--  DDL for Function VERIFICAR_DISPONIBILIDAD
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##ADMIN_DB"."VERIFICAR_DISPONIBILIDAD" (id_producto INT, cantidad_deseada INT, num_repeticiones INT) RETURN NUMBER AS
    v_stock_actual INT;
    v_resultado NUMBER;
    CURSOR c_stock IS
        SELECT stock FROM productos WHERE id_producto = id_producto;
BEGIN
    v_resultado := 0; -- Valor predeterminado: Stock insuficiente

    FOR i IN 1..num_repeticiones LOOP
        OPEN c_stock;
        FETCH c_stock INTO v_stock_actual;

        IF c_stock%FOUND THEN
            IF v_stock_actual >= cantidad_deseada THEN
                v_resultado := 1; -- Suficiente stock
            END IF;
        END IF;

        CLOSE c_stock;

        -- Realiza aquí cualquier acción adicional necesaria para cada repetición
    END LOOP;

    RETURN v_resultado;
END;

/
--------------------------------------------------------
--  Constraints for Table ADMINISTRADORES
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."ADMINISTRADORES" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CLIENTES
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."CLIENTES" ADD PRIMARY KEY ("ID_CLIENTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEPARTAMENTOS
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."DEPARTAMENTOS" ADD PRIMARY KEY ("DEPARTAMENTOS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DETALLES_PEDIDO
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."DETALLES_PEDIDO" ADD PRIMARY KEY ("ID_DETALLE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DIRECCIONES
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."DIRECCIONES" ADD PRIMARY KEY ("DIRECCION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EMPLEADO
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."EMPLEADO" ADD PRIMARY KEY ("EMPLEADO_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table FACTURAS
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."FACTURAS" ADD PRIMARY KEY ("FACTURA_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PAGOS
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."PAGOS" ADD PRIMARY KEY ("PAGO_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PEDIDOS
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."PEDIDOS" ADD PRIMARY KEY ("ID_PEDIDO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PRODUCTOS
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."PRODUCTOS" ADD PRIMARY KEY ("ID_PRODUCTO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PROVEEDORES
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."PROVEEDORES" ADD PRIMARY KEY ("ID_PROVEEDOR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DEPARTAMENTOS
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."DEPARTAMENTOS" ADD FOREIGN KEY ("ID_PROVEEDOR")
	  REFERENCES "C##ADMIN_DB"."PROVEEDORES" ("ID_PROVEEDOR") ENABLE;
  ALTER TABLE "C##ADMIN_DB"."DEPARTAMENTOS" ADD FOREIGN KEY ("EMPLEADO_ID")
	  REFERENCES "C##ADMIN_DB"."EMPLEADO" ("EMPLEADO_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DETALLES_PEDIDO
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."DETALLES_PEDIDO" ADD FOREIGN KEY ("ID_PEDIDO")
	  REFERENCES "C##ADMIN_DB"."PEDIDOS" ("ID_PEDIDO") ENABLE;
  ALTER TABLE "C##ADMIN_DB"."DETALLES_PEDIDO" ADD FOREIGN KEY ("DIRECCION_ID")
	  REFERENCES "C##ADMIN_DB"."DIRECCIONES" ("DIRECCION_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DIRECCIONES
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."DIRECCIONES" ADD FOREIGN KEY ("ID_CLIENTE")
	  REFERENCES "C##ADMIN_DB"."CLIENTES" ("ID_CLIENTE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMPLEADO
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."EMPLEADO" ADD FOREIGN KEY ("ID_PEDIDOS")
	  REFERENCES "C##ADMIN_DB"."PEDIDOS" ("ID_PEDIDO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FACTURAS
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."FACTURAS" ADD FOREIGN KEY ("EMPLEADO_ID")
	  REFERENCES "C##ADMIN_DB"."EMPLEADO" ("EMPLEADO_ID") ENABLE;
  ALTER TABLE "C##ADMIN_DB"."FACTURAS" ADD CONSTRAINT "FK_CLIENTE" FOREIGN KEY ("ID_CLIENTE")
	  REFERENCES "C##ADMIN_DB"."CLIENTES" ("ID_CLIENTE") ENABLE;
  ALTER TABLE "C##ADMIN_DB"."FACTURAS" ADD FOREIGN KEY ("PAGO_ID")
	  REFERENCES "C##ADMIN_DB"."PAGOS" ("PAGO_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PAGOS
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."PAGOS" ADD FOREIGN KEY ("DIRECCION_ID")
	  REFERENCES "C##ADMIN_DB"."DIRECCIONES" ("DIRECCION_ID") ENABLE;
  ALTER TABLE "C##ADMIN_DB"."PAGOS" ADD FOREIGN KEY ("ID_PEDIDO")
	  REFERENCES "C##ADMIN_DB"."PEDIDOS" ("ID_PEDIDO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PEDIDOS
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."PEDIDOS" ADD FOREIGN KEY ("ID_CLIENTE")
	  REFERENCES "C##ADMIN_DB"."CLIENTES" ("ID_CLIENTE") ENABLE;
  ALTER TABLE "C##ADMIN_DB"."PEDIDOS" ADD FOREIGN KEY ("ID_PRODUCTO")
	  REFERENCES "C##ADMIN_DB"."PRODUCTOS" ("ID_PRODUCTO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PRODUCTOS
--------------------------------------------------------

  ALTER TABLE "C##ADMIN_DB"."PRODUCTOS" ADD FOREIGN KEY ("ID_PROVEEDOR")
	  REFERENCES "C##ADMIN_DB"."PROVEEDORES" ("ID_PROVEEDOR") ENABLE;
